var x=Object.defineProperty;var g=(c,t,e)=>t in c?x(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var a=(c,t,e)=>g(c,typeof t!="symbol"?t+"":t,e);import{j as n,c as k,R as j}from"./client-CADlzgmn.js";class u{static indexArray(t){const e=new Array(t);for(let s=0;s<t;++s)e[s]=s;return e}static log(...t){console.log(...t)}static randomIndicesForArrayOfSize(t){const e=[],s=u.indexArray(t);let i=0;for(let h=0;h<t;++h){const o=Math.floor(Math.random()*(t-h));e.push(s[o]),i=s[o],s[o]=s[t-h-1],s[t-h-1]=i}return e}}class S{constructor(){Object.getOwnPropertyNames(this.constructor.prototype).filter(t=>t!=="constructor").forEach(t=>{this[t]=this[t].bind(this)})}}const r=class r{static exclude(t,e){return e.filter(s=>!s.equals(t))}static highestCardInSubset(t){return t.toSorted((e,s)=>s.lt(e))[0]}static highestCardInSubsets(t,e){if(t.length===0||e.length===0)return null;const s=r.highestCardInSubset(t),i=r.highestCardInSubset(e);return s.equals(i)?r.highestCardInSubsets(r.exclude(s,t),r.exclude(i,e)):Math.max(s.value(),i.value())}static fromJSON(t){return new r(t.suit,t.rank)}static isHighCardLess(t,e){if(t.length===0||e.length===0)return!1;const s=r.highestCardInSubset(t),i=r.highestCardInSubset(e);return s.lt(i)?!0:i.lt(s)?!1:r.isHighCardLess(r.exclude(s,t),r.exclude(i,e))}constructor(t,e){this.suit=r.Suits[t],this.rank=r.Ranks[e]}equals(t){return this.value()===t.value()}isSameAsCard(t){return self.equals(t)&&self.suit===t.suit}lowValue(){return r.LowValues[self.rank]}lt(t){return this.value()<t.value()}value(){return r.Values[self.rank]}toString(){return`${this.suit}${this.rank}`}toJSON(){return{suit:this.suit,rank:this.rank}}};a(r,"Suits",{club:"♣️",diamond:"♦️",heart:"♥️",spade:"♠️"}),a(r,"Ranks",{deuce:"2",trey:"3",four:"4",five:"5",six:"6",seven:"7",eight:"8",nine:"9",ten:"10",jack:"J",queen:"Q",king:"K",ace:"A"}),a(r,"Values",{deuce:2,trey:3,four:4,five:5,six:6,seven:7,eight:8,nine:9,ten:10,jack:11,queen:12,king:13,ace:14}),a(r,"LowValues",{deuce:2,trey:3,four:4,five:5,six:6,seven:7,eight:8,nine:9,ten:10,jack:11,queen:12,king:13,ace:1});let l=r;const d=class d extends S{constructor(){super(),this.cards=[];for(const t of d.suits)for(const e of d.ranks)this.cards.push(new l(t,e));this.reset()}burn(t=1){if(this.deckIndex+t>this.cards.length)return null;const e=[];for(let s=1;s<=t;++s){const i=this.cards[this.deckIndex];this.discards.push(i),e.push(i),this.deckIndex+=1}return e}currentCard(){return this.deckIndex<this.cards.length?this.cards[this.deckIndex]:null}dealCard(){if(this.deckIndex+1>this.cards.count)return null;const t=this.cards[this.deckIndex];return this.dealtCards.push(t),this.deckIndex+=1,t}reset(){this.dealtCards=[],this.deckIndex=0,this.discards=[]}shuffle(){u.log(this.cards.length);const t=u.randomIndicesForArrayOfSize(this.cards.length);u.log(t);const e=[];for(let s=0;s<this.cards.length;++s)e.push(this.cards[t[s]]);this.cards=e,u.log(this.cards),this.reset()}toString(){return`${this.cards}`}};a(d,"ranks",Object.keys(l.Ranks)),a(d,"suits",Object.keys(l.Suits));let f=d;const I=()=>{const c=new f;return n.jsxs(n.Fragment,{children:[n.jsx("p",{children:c.toString()}),n.jsx("button",{onClick:c.shuffle,children:"Shuffle"}),n.jsx("button",{onClick:c.dealCard,children:"Deal"}),n.jsx("button",{onClick:c.reset,children:"Reset"})]})},b=()=>n.jsxs(n.Fragment,{children:[n.jsx("h1",{children:"Heads Up!"}),n.jsx("div",{children:"bets"}),n.jsx("div",{children:"board"}),n.jsx("div",{children:n.jsx(I,{})})]});k.createRoot(document.getElementById("root")).render(n.jsx(j.StrictMode,{children:n.jsx(b,{})}));
